{"name":"Chromosome counter","tagline":"A simple tool to count chromosomes in the metaphase spreads for mouse and human cells. Allows for manual edition of the segmentation afterwards","body":"Chromosome_counter\r\n==================\r\n\r\nA simple tool to count chromosomes in the metaphase spreads for mouse and human cells. Allows for manual edition of the segmentation afterwards\r\n\r\n\r\nPurpose:\r\n--------\r\nThis package is intended to run chromosome counting routines after imaging with DAPI staining.\r\n\r\nHuman and mice chromosome counting is currently supported.\r\n\r\nInitial spread images in .tif, .tiff, .jpg, jpeg formats are supported. Images up to 4 Mega pixels are supported. In case\r\nyou are using a jpeg image as a source, make sure it was compressed with highest quality. Because of image deformation \r\ndue to compression, the pre-processing is likely to create unlikely patterns. A good way of avoiding this is to save JPEG\r\nfiles with GIMP, while setting compression quality to 100% and smoothing to 1 in advanced parameters.\r\n\r\nThe application was tested on Windows 7 and should work on all the Windows NT (XP or better) workstations\r\n\r\n\r\nInstallation:\r\n-------------\r\nThis package requires the following Python modules:\r\n - PIL\r\n - numpy\r\n - scipy\r\n - matplotlib\r\n - scikit-image\r\n - scikit-learn\r\n - mdp\r\n - kivy\r\n - pygame\r\n - pyamg\r\n\r\nAn optimal way of doing it on Windows platform is to install the Anacoda Python distribution (available\r\n[here](https://store.continuum.io/cshop/anaconda/) ) and then to download the lacking modules from [Gohlke's \r\nUnofficial binaries for Python extensions](http://www.lfd.uci.edu/~gohlke/pythonlibs/), namely:\r\n - mdp\r\n - kivy\r\n - pygame\r\n - pyamg\r\n\r\nFor installation of the application itself, download the package, unzip or untar it, and launch the GUI.py with python:\r\n    > python GUI.py\r\n\r\n\r\nUser pipeline:\r\n-------------\r\n1. Start the GUI by launching GUI.py\r\n\r\n2. Select the file or folder you would like to process and hit \"Preprocess\"\r\n\r\n    2.1 If a file was selected, the pre-processing will only affect this file\r\n    \r\n    2.2 If no file was selected, the pre-processing will scan through the folder and look for all the files with\r\n        allowed extension (.tif/.tiff/.jpg/.jpeg) and pre-process them all.\r\n        \r\n3. Inside the folder a \"buffer\" folder will be created, with subfolders named as selected images. In each subfolder, the\r\n    original image, segmentation mask and some program-specific data will be saved\r\n    \r\nNOTE: Depending on the OS and workstation, it might take between 1 to 5 minutes per file. The application progress bar\r\n        will not move unless a file is pre-processed, so if it looks like your process is hanging, most of the time it is\r\n        not the case.\r\n        \r\n4. Once the pre-processing will be finished, you can manually edit the segmentation mask to better fit the reality. As \r\n    a rule of thumb, all spreads that are easy to count by eye will need no additional post-processing. In case any edition\r\n    is needed, we recommend using GNU Image Manipulation Program (GIMP) or Windows Paint.\r\n    \r\n5. Once modifications are made, hit the \"Process after correction\".\r\n\r\n    5.1 A \"output\" folder will be generated in the same location as image, containing all the segmented images with \r\n    counted chromosomes\r\n    \r\n    5.2 A window will pop allowing you to inspect the segmentation results. \r\n    \r\n    5.3 If the segmentation results are unsatisfactory,\r\n        edit the corresponding mask in the corresponding buffer folder and re-save it as \"EDIT_ME2.tif\" file. \r\n\r\n    \r\nSupport:\r\n---------\r\nIn case of problems, please fill in the issue in the issue tracker of the master project on GitHub. We will come back to\r\nyou ASAP.\r\n\r\n\r\nVisual:\r\n-------\r\nGUI:\r\n\r\n![alt tag](http://i.imgur.com/XiaQyJI.png)\r\n\r\nuncorrected Spread mask\r\n\r\n![alt tag](http://i.imgur.com/bmSeQAD.png)\r\n\r\nSegmentation without correction\r\n\r\n![alt tag](http://i.imgur.com/XnAT9UO.png)\r\n\r\ncorrected Spread Mask\r\n\r\n![alt tag](http://i.imgur.com/svb65De.png)\r\n\r\nClustering with correction\r\n\r\n![alt tag](http://i.imgur.com/dhMt5ce.png)\r\n\r\n\r\nIn-depth description of the algorithm:\r\n--------------------------------------\r\nThis package tries to imitate the functioning of the human primary visual cortex by switching the initial image into the \r\nlog-intensity scale, filtering out anything that is on the edges or looks like a unbroken nucleus and then performing a\r\nGabor Transform on the image to recognize the chromosome arms and spaces between the individual chromosomes. Once the\r\nprocess is complete the algorithm performs a clustering by diffusion, avoiding the zone of strongest activation of zones\r\nwhere the Gabor filter recognized the chromosome separating zone and starting from the points with the strongest activation\r\nof the chromosome arm recognition. The resulting clusters are then color-coded and returned to the user.\r\n\r\nIn case of human chromosome, in addition to the normal Gabor filters, an additional, crossed Gabor filter is used to\r\nrecognize the centromere, provided that on the local level it looks a lot like space between chromosomes.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}